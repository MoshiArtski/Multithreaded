#include <iostream>
#include <vector>
#include <thread>

int gValue {0}; 
const int iterationTimes {10000000};

void incrementValue(int& value, const int& iterationTimes)
{
    for (int i = 0 ; i <  iterationTimes ; ++i )
    {
        ++value;
    }
}

int main() {
    
    const int numThreads{10};
    
    std::vector<std::thread> threads;
    
    threads.reserve(numThreads);
    
    for (int i = 0; i < numThreads; ++i)
    {
        threads.push_back(std::thread(incrementValue, std::ref(gValue), std::cref(iterationTimes)));
    }
    
    for (auto& thread : threads)
    {
        thread.join();
    }
    
    std::cout << gValue << std::endl;
    
    return 0;
}
